/**
 * 输入一个正整数数组，把数组里所有数字拼接起来排成一个数，
 * 打印能拼接出的所有数字中最小的一个。例如输入数组{3，32，321}，
 * 则打印出这三个数字能排成的最小数字为321323。
 */

//可以用全排列算法，但是这题最佳的是设计出一种比较算法
//比a和b哪个更应该排在前面，而不是a和b谁大，那么比较a+b和b+a谁大就好了，当然这里是字符串连接，
//字符串相加只是为了拼接起来，相减这种方式其实还是对数字进行排序
function PrintMinNumber(numbers) {
    // 检查输入
    if (!numbers || !numbers.length) {
        return '';
    }
    // 自定义排序
    numbers.sort(function (a, b) {
        let m = a.toString();
        let n = b.toString();
        console.log("a,b",a,b)
        return (m + n) - (n + m);  
    });
    return parseInt(numbers.join(""));
}

PrintMinNumber([3,32,321])

// 3和32  332 - 323 > 0        [32,3,321]
// 3和321  3321 - 3213 > 0     [32,321,3]
// 321和3   3213 - 3321 < 0    [32,321,3]
// 32和321  32321 - 32132 > 0  [321,32,3]
// 32和3    323 - 332 < 0      [321,32,3]
