// 思路：比较相邻的两个元素，如果前一个比后一个大，则交换位置。

function bubbleSort(arr) {
    let len = arr.length;
    // 外层循环是趟数，n个数字需要比较n-1趟
    for (let i = 0; i < len - 1; i++) {
        // 每一趟需要比较的次数，第1趟需要比较4次，第2趟需要比较3次，由此得出 len - i - 1
        for (let j = 0; j < len - i - 1; j++) {
            //前一位与后一位与前一位比较，如果前一位比后一位要大，那么交换
            if (arr[j] > arr[j + 1]) {
                [arr[j + 1], arr[j]] = [arr[j], arr[j + 1]];
            }
        }
    }
    return arr;
}

bubbleSort([2, 4, 1, 7, 5])

/*
//第一趟，注意这里循环次数是len-i-1，-1是因为是前一项和后一项比，5-0-1=4
- 2和4 -> [2,4,1,7,5]
- 4和1 -> [2,1,4,7,5]
- 4和7 -> [2,1,4,7,5]
- 7和5 -> [2,1,4,5,7]  //老大是7

//第二趟,7已经是老大了，还比个毛？5-1-1=3
- 2和1 -> [1,2,4,5,7]
- 2和4
- 4和5 -> [1,2,4,5,7] //老二是5

//第三趟，5是老二了，也不用比  5-2-1=2
- 1和2
- 2和4  //老三是4

//第四趟
- 1和2 // 老四是2

接下来就没有第五趟了，因为最大的四个数字已经确定了，剩下的就是最小的了
*/